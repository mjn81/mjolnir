// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Files {
  id           String      @id @unique @default(cuid())
  name         String
  path         String
  mimeType     String
  category     Categories? @relation(fields: [categoriesId], references: [id], onDelete: SetNull)
  categoriesId String?
  user         Users       @relation(fields: [usersId], references: [id], onDelete: Cascade)
  usersId      String
  size         Int
  folder       Folders?    @relation(fields: [foldersId], references: [id], onDelete: SetNull)
  foldersId    String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@map("file")
}

model Categories {
  id        String   @id @unique @default(cuid())
  name      String
  user      Users    @relation(fields: [usersId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Files     Files[]
  usersId   String

  @@map("category")
}

model Users {
  id         String       @id @unique @default(cuid())
  fullName   String
  userName   String
  email      String       @unique
  password   String
  role       Role         @default(CLIENT)
  usage      Usage?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Files      Files[]
  Categories Categories[]
  Folders    Folders[]

  @@map("user")
}

model Folders {
  id        String    @id @unique @default(cuid())
  name      String?
  parentId  String?
  parent    Folders?  @relation("parents", fields: [parentId], references: [id], onDelete: Cascade)
  Folders   Folders[] @relation("parents")
  user      Users     @relation(fields: [usersId], references: [id], onDelete: Cascade)
  usersId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Files     Files[]

  @@map("folder")
}

model Usage {
  id        String   @id @unique @default(cuid())
  user      Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  used      BigInt   @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  limit     BigInt   @default(500000000) // 500MB in bytes

  @@map("usage")
}

enum Role {
  ADMIN
  CLIENT
}
